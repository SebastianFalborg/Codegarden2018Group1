@inherits Umbraco.Web.Mvc.UmbracoTemplatePage<ContentModels.WorkshopItem>
@using Newtonsoft.Json
@using Umbraco.Core.Services
@using ContentModels = Umbraco.Web.PublishedContentModels;

@{
    Layout = "Shared/_Layout.cshtml";
    var speakers = Model.Content.GetPropertyValue<IEnumerable<IPublishedContent>>("speakers");
    }
}

<div class="main-banner cover" style="background-image:url('@Model.Content.ContentImage.Url')">
    <div class="image-overlay"></div>
    <div class="container">
        <div class="row">
            <div class="banner-content">
                <div class="col-xs-12">
                    <h1>@Model.Content.Name</h1>
                </div>
                <div class="col-xs-12">
                    <p>Workshop</p>
                </div>
            </div>
        </div>
    </div>
</div>



<div class="section">
    <div class="container">
        <div class="row">
            
            <div class="col-lg-3 offset-md-1 col-md-4 col-sm-12">
                <div class="row">
                    @foreach (var speaker in speakers)
            {
                var picUrl = "https://upload.wikimedia.org/wikipedia/commons/a/ac/No_image_available.svg";
                        <div class="col-md-12 col-sm-6">
                            <div class="main-link-block">
                                <a href="@speaker.Url">
                                    <div class="link-block-wrap speaker-size">
                                        @try
                                        {
                                            int picId = int.Parse(speaker.GetPropertyValue("contentImage").ToString());
                                            picUrl = Umbraco.Media(picId).Url;
                                        }
                                        catch { }
                                        <div style="background-image: url('@picUrl')" class="link-block-image cover">
                                            <div class="image-gradient-overlay"></div>
                                            <div class="link-block-content">
                                                <h3>@speaker.GetPropertyValue("headline")</h3>
                                            </div>
                                            <div class="read-more">Read more</div>
                                        </div>
                                    </div>
                                </a>
                            </div>

                        </div>
                    }

                </div>
            </div>

            <div class="col-lg-7 col-md-6 col-sm-12">
                @Model.Content.BodyText

            </div>
        </div>
        <hr class="hr-special"/>
        <div class="row">

                @if (Members.IsLoggedIn())
                {
                    if(Members.GetCurrentMember().GetPropertyValue<IEnumerable<string>>("WorkshopItems").Contains(Model.Content.Headline))
                    {
                        <p>You are already signed up</p>
                    }
                    else
                    {
                        <form action="" method="post">
                            <input name="signUp" value="@Model.Content.Id" hidden=""/>
                            <button type="submit">Sign up for workshop</button>
                        </form>
                    }
                }
                else
                {
                    <div class="col-md-12 text-center">
                        <h4>Login to sign up for the workshops</h4> 
                    </div>
                    <div class="col-sm-4 col-sm-offset-4 col-xs-8 col-xs-offset-2">
                        <a href="/login-page/"><button class="main-link green-btn">Login</button></a>
                    </div>
                }

        </div>
    </div>
</div>